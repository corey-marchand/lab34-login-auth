{"ast":null,"code":"var _jsxFileName = \"/Users/coreymarchand/Desktop/codeFellows/401/assignments/lab34-login-auth/practice/src/components/auth/auth.js\";\nimport React from 'react';\nimport { LoginContext } from './context';\n\nconst If = props => {\n  return !!props.condition ? props.children : null;\n};\n\nclass Auth extends React.Component {\n  render() {\n    let okToRender = false;\n\n    try {\n      okToRender = this.context.loggedIn && (this.props.capability ? this.context.user.capabilities.includes(this.props.capability) : true);\n    } catch (e) {\n      console.warn(\"Not Authorized\");\n    } // <Auth> <div /> </Auth>\n    /// are you logged in?\n    /// was there no capability specified?\n    // <Auth capability=\"foo\"> <div /> </Auth>\n    /// are you logged in?\n    /// Is there a capability that we care about?\n    /// do you have it?\n\n\n    return React.createElement(If, {\n      condition: okToRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.props.children));\n  }\n\n}\n\nAuth.contextType = LoginContext;\nexport default Auth;","map":{"version":3,"sources":["/Users/coreymarchand/Desktop/codeFellows/401/assignments/lab34-login-auth/practice/src/components/auth/auth.js"],"names":["React","LoginContext","If","props","condition","children","Auth","Component","render","okToRender","context","loggedIn","capability","user","capabilities","includes","e","console","warn","contextType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,WAA7B;;AAEA,MAAMC,EAAE,GAAGC,KAAK,IAAI;AAClB,SAAO,CAAC,CAACA,KAAK,CAACC,SAAR,GAAoBD,KAAK,CAACE,QAA1B,GAAqC,IAA5C;AACD,CAFD;;AAIA,MAAMC,IAAN,SAAmBN,KAAK,CAACO,SAAzB,CAAmC;AAEjCC,EAAAA,MAAM,GAAG;AACP,QAAIC,UAAU,GAAG,KAAjB;;AAEA,QAAI;AACFA,MAAAA,UAAU,GACR,KAAKC,OAAL,CAAaC,QAAb,KACC,KAAKR,KAAL,CAAWS,UAAX,GACG,KAAKF,OAAL,CAAaG,IAAb,CAAkBC,YAAlB,CAA+BC,QAA/B,CAAwC,KAAKZ,KAAL,CAAWS,UAAnD,CADH,GAEG,IAHJ,CADF;AAKD,KAND,CAME,OAAOI,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,IAAR,CAAa,gBAAb;AACD,KAXM,CAaP;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,WACE,oBAAC,EAAD;AAAI,MAAA,SAAS,EAAET,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKN,KAAL,CAAWE,QAAjB,CADF,CADF;AAKD;;AA7BgC;;AAA7BC,I,CACGa,W,GAAclB,Y;AA+BvB,eAAeK,IAAf","sourcesContent":["import React from 'react';\nimport { LoginContext } from './context';\n\nconst If = props => {\n  return !!props.condition ? props.children : null;\n};\n\nclass Auth extends React.Component {\n  static contextType = LoginContext;\n  render() {\n    let okToRender = false;\n\n    try {\n      okToRender =\n        this.context.loggedIn &&\n        (this.props.capability\n          ? this.context.user.capabilities.includes(this.props.capability)\n          : true);\n    } catch (e) {\n      console.warn(\"Not Authorized\");\n    }\n\n    // <Auth> <div /> </Auth>\n    /// are you logged in?\n    /// was there no capability specified?\n\n    // <Auth capability=\"foo\"> <div /> </Auth>\n    /// are you logged in?\n    /// Is there a capability that we care about?\n    /// do you have it?\n\n    return (\n      <If condition={okToRender}>\n        <div>{this.props.children}</div>\n      </If>\n    );\n  }\n}\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}